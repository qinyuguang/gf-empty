// Code generated by MockGen. DO NOT EDIT.
// Source: app/dto/book/book.go

// Package mock_book is a generated GoMock package.
package mock_book

import (
	book "gf-empty/app/dto/book"
	errors "gf-empty/library/errors"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRequest is a mock of Request interface
type MockRequest struct {
	ctrl     *gomock.Controller
	recorder *MockRequestMockRecorder
}

// MockRequestMockRecorder is the mock recorder for MockRequest
type MockRequestMockRecorder struct {
	mock *MockRequest
}

// NewMockRequest creates a new mock instance
func NewMockRequest(ctrl *gomock.Controller) *MockRequest {
	mock := &MockRequest{ctrl: ctrl}
	mock.recorder = &MockRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequest) EXPECT() *MockRequestMockRecorder {
	return m.recorder
}

// CreateRequest mocks base method
func (m *MockRequest) CreateRequest() (*book.CreateRequest, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRequest")
	ret0, _ := ret[0].(*book.CreateRequest)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// CreateRequest indicates an expected call of CreateRequest
func (mr *MockRequestMockRecorder) CreateRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRequest", reflect.TypeOf((*MockRequest)(nil).CreateRequest))
}

// GetRequest mocks base method
func (m *MockRequest) GetRequest() (*book.GetRequest, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequest")
	ret0, _ := ret[0].(*book.GetRequest)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// GetRequest indicates an expected call of GetRequest
func (mr *MockRequestMockRecorder) GetRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequest", reflect.TypeOf((*MockRequest)(nil).GetRequest))
}
